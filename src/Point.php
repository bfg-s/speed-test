<?phpnamespace Bfg\SpeedTest;class Point{    /**     * Previous point     *     * @var Point|null     */    static ?Point $previous = null;    /**     * @var mixed|null     */    public array $trace;    /**     * @var float     */    public float $before_start = 0;    /**     * @var float     */    public float $start = 0;    /**     * @var float     */    public float $diff = 0;    /**     * @var int     */    public float $time = 0;    /**     * @param  mixed  $message     * @param  array|null  $trace     */    public function __construct(        public mixed $message = null,        array $trace = null    ) {        if (!$trace) $trace = debug_backtrace()[0];        $this->trace = $trace;        $this->time = microtime(true);        $this->start = hrtime(1);        if (ServiceProvider::$points) {            /** @var Point $last_point */            $last_point = ServiceProvider::$points[                array_key_last(ServiceProvider::$points)            ];            $this->before_start = $last_point->start;            $this->diff = (($this->start - $this->before_start) / 1e+6) / 1000;            //dd($this->diff, (($this->start - $this->before_start) / 1e+6) / 1000);        }        ServiceProvider::$points[] = $this;    }    /**     * @param  mixed|null  $message     * @param  array|null  $trace     * @return Point     */    public static function make(mixed $message = null, array $trace = null): Point    {        if (!$trace) $trace = debug_backtrace()[0];        return new static($message, $trace);    }}